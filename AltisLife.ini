[Default]
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.
Version = 1
;; List of characters to strip out
Strip Chars = ";[]"

;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars
;;     Note: Logging on works when sending data to database.
Strip Chars Mode = 1

;; This is bugged atm and not used
[startupProcedures]
Prepared Statement = false
SQL1_1 = CALL resetLifeVehicles
SQL2_1 = CALL deleteDeadVehicles
SQL3_1 = CALL deleteOldHouses
SQL4_1 = CALL deleteOldGangs
SQL5_1 = CALL createStatistics
SQL6_1 = CALL deleteOldWantedEntries

[getConfigSSV]
Prepared Statement = true
SQL1_1 = SELECT name, value FROM config_ssv
OUTPUT = 1-string,2

[getConfigItems]
Prepared Statement = true
SQL1_1 = SELECT internalName, weight, displayName, buyPrice, sellPrice, illegal, requirements FROM config_items
OUTPUT = 1-string,2,3-string,4,5,6,7

[getConfigVehicles]
Prepared Statement = true
SQL1_1 = SELECT side, classname, trunk, priceBuy, priceRent, priceInsure, priceUnpark, shops, requirements FROM config_vehicles ORDER BY priceBuy ASC
OUTPUT = 1-string,2-string,3,4,5,6,7,8,9

[getConfigTraders]
Prepared Statement = true
SQL1_1 = SELECT name, caption, contents FROM config_traders
OUTPUT = 1-string,2-string,3

[getConfigObjectsShops]
Prepared Statement = true
SQL1_1 = SELECT DISTINCT shop FROM config_objects
OUTPUT = 1-string

[getConfigObjectsFromShop]
Prepared Statement = true
SQL1_1 = SELECT class, caption, price, requirements FROM config_objects WHERE orderNr > 0 AND shop = ? ORDER BY orderNr
SQL1_INPUTS = 1
OUTPUT = 1-string,2-string,3,4

[updateDaytime]
Prepared Statement = true
SQL1_1 = UPDATE config_ssv SET value = ? WHERE name = 'XY_ssv_daytime'
SQL1_INPUTS = 1

[updateFed]
Prepared Statement = true
SQL1_1 = UPDATE config_ssv SET value = ? WHERE name = 'XY_ssv_fed'
SQL1_INPUTS = 1

[insertPLog]
Prepared Statement = true
SQL1_1 = INSERT INTO plog (pid, type, log) VALUES (?, ?, ?)
SQL1_INPUTS = 1, 2, 3

[selectGangBank]
Prepared Statement = true
SQL1_1 = SELECT bank FROM gangs WHERE id = ?
SQL1_INPUTS = 1
OUTPUT = 1

[updateGangBank]
Prepared Statement = true
SQL1_1 = UPDATE gangs SET bank = GREATEST(bank + ?, 0) WHERE id = ?
SQL1_INPUTS = 1, 2

[updateGangInactive]
Prepared Statement = true
SQL1_1 = UPDATE gangs SET active = '0' WHERE id = ?
SQL1_INPUTS = 1

[updateGang]
Prepared Statement = true
SQL1_1 = UPDATE gangs SET members = ?, moderators = ?, maxmembers = ?, owner = ?, lastactivity = CURRENT_TIMESTAMP WHERE id = ?
SQL1_INPUTS = 1, 2, 3, 4, 5

[insertGangBankLog]
Prepared Statement = true
SQL1_1 = INSERT INTO gangbanklog (ID_gang, pid, type, amount) VALUES (?, ?, ?, ?)
SQL1_INPUTS = 1, 2, 3, 4

[selectGangBankLog]
Prepared Statement = true
SQL1_1 = SELECT date, name, type, amount FROM vgangbanklog WHERE id = ? LIMIT 30
SQL1_INPUTS = 1
OUTPUT = 1-string, 2-string, 3-string, 4

[selectLockedVehicles]
Prepared Statement = true
SQL1_1 = SELECT id, classname, name, color FROM lockedvehicles ORDER BY classname
OUTPUT = 1, 2-string, 3-string, 4

[selectVehicles]
Prepared Statement = true
SQL1_1 = SELECT id, classname, type, color, locked, trunk, chip FROM vehicles WHERE pid = ? AND alive = '1' AND sold = '0' AND active = '0' AND side = ? AND type = ? ORDER BY classname
SQL1_INPUTS = 1, 2, 3
OUTPUT = 1, 2-string, 3-string, 4, 5, 6, 7

[selectVehicleByID]
Prepared Statement = true
SQL1_1 = SELECT classname, color, chip FROM vehicles WHERE id = ? AND alive = '1' AND active = '0' AND sold = '0'
SQL1_INPUTS = 1
OUTPUT = 1-string, 2, 3, 4

[selectVehicleTrunkByID]
Prepared Statement = true
SQL1_1 = SELECT trunk FROM vehicles WHERE id = ?
SQL1_INPUTS = 1
OUTPUT = 1

[updateVehicleUnpark]
Prepared Statement = true
SQL1_1 = UPDATE vehicles SET active = '1', locked = '0', ts_modified = CURRENT_TIMESTAMP WHERE id = ?
SQL1_INPUTS = 1

[updateVehiclePark]
Prepared Statement = true
SQL1_1 = UPDATE vehicles SET active = '0', locked = ?, trunk = ?, ts_modified = CURRENT_TIMESTAMP WHERE id = ?
SQL1_INPUTS = 1, 2, 3

[updateVehicleDestroyed]
Prepared Statement = true
SQL1_1 = UPDATE vehicles SET alive = ?, trunk = '[]', ts_modified = CURRENT_TIMESTAMP WHERE id = ?
SQL1_INPUTS = 1, 2

[updateVehicleData]
Prepared Statement = true
SQL1_1 = UPDATE vehicles SET chip = ? WHERE id = ?
SQL1_INPUTS = 1, 2

[updateVehicleTrunk]
Prepared Statement = true
SQL1_1 = UPDATE vehicles SET trunk = ? WHERE id = ?
SQL1_INPUTS = 1, 2

[updateVehicleSell]
Prepared Statement = true
SQL1_1 = UPDATE vehicles SET alive = '0', sold = '1', ts_modified = CURRENT_TIMESTAMP WHERE id = ?
SQL1_INPUTS = 1

[updateVehicleColor]
Prepared Statement = true
SQL1_1 = UPDATE vehicles SET color = ? WHERE id = ?
SQL1_INPUTS = 1, 2

[insertMessage]
Prepared Statement = true
SQL1_1 = INSERT INTO messages (fromID, toID, message, fromName, toName) VALUES(?, ?, ?, ?, ?)
SQL1_INPUTS = 1, 2, 3, 4, 5

[selectGangByName]
Prepared Statement = true
SQL1_1 = SELECT id FROM gangs WHERE name = ? AND active = '1'
SQL1_INPUTS = 1
OUTPUT = 1

[selectGangByMember]
Prepared Statement = true
SQL1_1 = SELECT id, owner, name, maxmembers, bank, members, moderators FROM gangs WHERE (members LIKE ? OR owner = ?) AND active = '1'
SQL1_INPUTS = 1, 2
OUTPUT = 1, 2-string, 3-string, 4, 5, 6, 7, 8

[insertGang]
Prepared Statement = true
Return InsertID = true
SQL1_1 = INSERT INTO gangs (owner, name, members, moderators, maxmembers) VALUES(?, ?, ?, ?, ?)
SQL1_INPUTS = 1, 2, 3, 4, 5

[selectRTC]
Prepared Statement = true
SQL1_1 = SELECT Hour, Minute, Second, DayOfWeek FROM vcurrenttime
OUTPUT = 1, 2, 3, 4

[selectMessages]
Prepared Statement = true
SQL1_1 = SELECT fromName, fromID, message FROM messages WHERE toID = ? ORDER BY time DESC LIMIT 20
SQL1_INPUTS = 1
OUTPUT = 1-string, 2-string, 3-string

[selectHouses]
Prepared Statement = true
SQL1_1 = SELECT houses.id, houses.pos, IFNULL((SELECT v FROM kvstore kv WHERE kv.k = 'name' AND side = 0 AND kv.pid = houses.pid), 'ERROR') AS name, houses.pid FROM houses WHERE houses.owned = '1' LIMIT ?, ?
SQL1_INPUTS = 1, 2
OUTPUT = 1, 2, 3-string, 4-string

[selectHouseByPos]
Prepared Statement = true
SQL1_1 = SELECT id FROM houses WHERE pos = ?
SQL1_INPUTS = 1
OUTPUT = 1

[insertHouse]
Prepared Statement = true
Return InsertID = true
SQL1_1 = INSERT INTO houses (pid, pos, trunk, containers, owned) VALUES (?, ?, ?, ?, ?)
SQL1_INPUTS = 1, 2, 3, 4, 5

[updateHouseSold]
Prepared Statement = true
SQL1_1 = UPDATE houses SET owned = '0' WHERE id = ?
SQL1_INPUTS = 1

[updateHouseTrunk]
Prepared Statement = true
SQL1_1 = UPDATE houses SET trunk = ? WHERE id = ?
SQL1_INPUTS = 1, 2

[selectWantedEntries]
Prepared Statement = true
SQL1_1 = SELECT playerid, message, value FROM wanted WHERE active = '1' LIMIT ?, ?
SQL1_INPUTS = 1, 2
OUTPUT = 1-string, 2-string, 3

[selectNameFromUID]
Prepared Statement = true
SQL1_1 = SELECT v FROM kvstore WHERE side = 0 AND k = 'name' AND pid = ?
SQL1_INPUTS = 1
OUTPUT = 1-string

[selectHousesForUID]
Prepared Statement = true
SQL1_1 = SELECT id, pos, trunk, containers FROM houses WHERE pid = ? AND owned = '1'
SQL1_INPUTS = 1
OUTPUT = 1, 2, 3, 4

[updateHouseContainers]
Prepared Statement = true
SQL1_1 = UPDATE houses SET containers = ? WHERE id = ?
SQL1_INPUTS = 1, 2

[selectKVStore]
Prepared Statement = true
SQL1_1 = SELECT k, v, t FROM kvstore WHERE pid = ? AND (side = ? OR side = 9)
SQL1_INPUTS = 1, 2
OUTPUT = 1-string, 2-string-add_escape_quotes, 3-string

[updateKVStore]
Prepared Statement = true
SQL1_1 = INSERT INTO kvstore (pid, side, k, v, t) VALUES (?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE v = ?, t = ?
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7

[insertPlayerAlias]
Prepared Statement = true
SQL1_1 = INSERT INTO player_alias (playerid, name, firstjoined, lastjoined) VALUES (?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE lastjoined = CURRENT_TIMESTAMP
SQL1_INPUTS = 1, 2

[selectOldPlayer]
Prepared Statement = true
SQL1_1 = SELECT cash, bankacc, coplevel, mediclevel, thwlevel, timejoined, civ_licenses, civ_gear, cop_licenses, cop_gear, med_licenses, med_gear, thw_licenses, thw_gear, activity FROM players WHERE playerid = ?
SQL1_INPUTS = 1
OUTPUT = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15

[selectPricelog]
Prepared Statement = true
SQL1_1 = SELECT price FROM pricelog WHERE resource = ? ORDER BY id DESC LIMIT 1
SQL1_INPUTS = 1
OUTPUT = 1

[insertPricelog]
Prepared Statement = true
SQL1_1 = INSERT INTO pricelog (resource, price) VALUE (?, ?)
SQL1_INPUTS = 1, 2

[selectVolumelog]
Prepared Statement = true
SQL1_1 = SELECT volume FROM volumelog WHERE resource = ? ORDER BY id DESC LIMIT 1
SQL1_INPUTS = 1
OUTPUT = 1

[insertVolumelog]
Prepared Statement = true
SQL1_1 = INSERT INTO volumelog (resource, volume) VALUE (?, ?)
SQL1_INPUTS = 1, 2

[insertMarketLog]
Prepared Statement = true
SQL1_1 = INSERT INTO market (type, players, oil, iron, diamond, copper, salt, cement, gold, jewelry, silber, holz, beer, brandy, nuclearfuel, moonshine, turtle, marijuana, cocaine, heroin, lsd, meth, sarin, crocodile, uran235, plutonium, waste, trashbag, trashp, barrel, glass) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31

[insertVehicle]
Prepared Statement = true
Return InsertID = true
SQL1_1 = INSERT INTO vehicles (side, classname, type, pid, trunk, color) VALUES (?, ?, ?, ?, ?, ?)
SQL1_INPUTS = 1, 2, 3, 4, 5, 6

[insertWanted]
Prepared Statement = true
SQL1_1 = INSERT INTO wanted (playerid, message, value) VALUES (?, ?, ?)
SQL1_INPUTS = 1, 2, 3

[updateWantedDisable]
Prepared Statement = true
SQL1_1 = UPDATE wanted SET active = '0' WHERE playerid = ?
SQL1_INPUTS = 1

[selectUIDByName]
Prepared Statement = true
SQL1_1 = SELECT pid, side FROM kvstore WHERE k = 'name' AND v LIKE ? LIMIT 1
SQL1_INPUTS = 1
OUTPUT = 1-string, 2

[selectNameFromBlacklist]
Prepared Statement = true
SQL1_1 = SELECT name FROM blacklist WHERE name = ?
SQL1_INPUTS = 1
OUTPUT = 1-string